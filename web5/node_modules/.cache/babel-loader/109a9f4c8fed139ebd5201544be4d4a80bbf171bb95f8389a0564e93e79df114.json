{"ast":null,"code":"var _jsxFileName = \"/Users/tiryagishprayad/Pictures/finalproject/web5/src/components/Display.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./Display.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Display = ({\n  contract,\n  account\n}) => {\n  _s();\n  const [data, setData] = useState(\"\");\n  const [selectedAccount, setSelectedAccount] = useState(\"\");\n  const [diseasePredictions, setDiseasePredictions] = useState({\n    decision_tree: \"\",\n    random_forest: \"\",\n    naive_bayes: \"\"\n  });\n  const accountNumbers = [\"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\", \"0x70997970C51812dc3A010C7d01b50e0d17dc79C8\", \"0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC\", \"0x90F79bf6EB2c4f870365E785982E1f101E93b906\", \"0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65\", \"0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc\", \"0x976EA74026E726554dB657fA54763abd0C3a0aa9\", \"0x14dC79964da2C08b23698B3D3cc7Ca32193d9955\", \"0x23618e81E3f5cdF7f54C3d65f7FBc0aBf5B21E8f\", \"0xa0Ee7A142d267C1f36714E4a8F75612F20a79720\", \"0xBcd4042DE499D14e55001CcbB24a551F3b954096\", \"0x71bE63f3384f5fb98995898A86B02Fb2426c5788\", \"0xFABB0ac9d68B0B445fB7357272Ff202C5651694a\", \"0x1CBd3b2770909D4e10f157cABC84C7264073C9Ec\", \"0xdF3e18d64BC6A983f673Ab319CCaE4f1a57C7097\", \"0xcd3B766CCDd6AE721141F452C550Ca635964ce71\", \"0x2546BcD3c84621e976D8185a91A922aE77ECEc30\", \"0xbDA5747bFD65F08deb54cb465eB87D40e51B197E\", \"0xdD2FD4581271e230360230F9337D5c0430Bf44C0\", \"0x8626f6940E2eb28930eFb4CeF49B2d1F2C9C1199\"];\n  const fetchData = async address => {\n    try {\n      const dataArray = await contract.display(address || account);\n      const isEmpty = dataArray.length === 0;\n      if (!isEmpty) {\n        const str = dataArray.join(\",\");\n        const str_array = str.split(\",\");\n        const images = str_array.map((item, i) => {\n          return /*#__PURE__*/_jsxDEV(\"a\", {\n            href: item,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://gateway.pinata.cloud/ipfs/${item.substring(6)}`,\n              alt: \"Patient Health Record\",\n              className: \"image-list\"\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this);\n        });\n        setData(images);\n      } else {\n        alert(\"No Record to display\");\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"Error: \" + error.message);\n    }\n  };\n  const getDiseasePredictions = async address => {\n    try {\n      const [decision_tree, random_forest, naive_bayes] = await contract.getDiseasePredictions(address || account);\n      setDiseasePredictions({\n        decision_tree,\n        random_forest,\n        naive_bayes\n      });\n    } catch (error) {\n      console.error(error);\n      alert(\"Error fetching disease predictions: \" + error.message);\n    }\n  };\n  useEffect(() => {\n    if (selectedAccount) {\n      fetchData(selectedAccount);\n      getDiseasePredictions(selectedAccount);\n    }\n  }, [selectedAccount]);\n  const handleAccountInputChange = event => {\n    setSelectedAccount(event.target.value);\n  };\n  const handleManualAccountInput = () => {\n    const manuallyEnteredAccount = prompt(\"Enter an Account Number\");\n    if (manuallyEnteredAccount) {\n      setSelectedAccount(manuallyEnteredAccount);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"account-dropdown\",\n      onChange: handleAccountInputChange,\n      value: selectedAccount,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        className: \"select-option\",\n        children: \"Select an Account Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), accountNumbers.map((accountNumber, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: accountNumber,\n        children: accountNumber\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"center button\",\n      onClick: fetchData,\n      children: \"Get Patient Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"center button\",\n      onClick: getDiseasePredictions,\n      children: \"Get Disease Predictions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-list\",\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"disease-predictions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Disease Predictions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Decision Tree: \", diseasePredictions.decision_tree]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Random Forest: \", diseasePredictions.random_forest]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Naive Bayes: \", diseasePredictions.naive_bayes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Display, \"iOscXITNv0G08eoZKIS58w7N2V8=\");\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Display","contract","account","_s","data","setData","selectedAccount","setSelectedAccount","diseasePredictions","setDiseasePredictions","decision_tree","random_forest","naive_bayes","accountNumbers","fetchData","address","dataArray","display","isEmpty","length","str","join","str_array","split","images","map","item","i","href","target","rel","children","src","substring","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","alert","error","console","message","getDiseasePredictions","handleAccountInputChange","event","value","handleManualAccountInput","manuallyEnteredAccount","prompt","onChange","disabled","accountNumber","index","onClick","_c","$RefreshReg$"],"sources":["/Users/tiryagishprayad/Pictures/finalproject/web5/src/components/Display.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./Display.css\";\n\nconst Display = ({ contract, account }) => {\n  const [data, setData] = useState(\"\");\n  const [selectedAccount, setSelectedAccount] = useState(\"\");\n  const [diseasePredictions, setDiseasePredictions] = useState({\n    decision_tree: \"\",\n    random_forest: \"\",\n    naive_bayes: \"\",\n  });\n\n  const accountNumbers = [\n    \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\",\n    \"0x70997970C51812dc3A010C7d01b50e0d17dc79C8\",\n    \"0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC\",\n    \"0x90F79bf6EB2c4f870365E785982E1f101E93b906\",\n    \"0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65\",\n    \"0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc\",\n    \"0x976EA74026E726554dB657fA54763abd0C3a0aa9\",\n    \"0x14dC79964da2C08b23698B3D3cc7Ca32193d9955\",\n    \"0x23618e81E3f5cdF7f54C3d65f7FBc0aBf5B21E8f\",\n    \"0xa0Ee7A142d267C1f36714E4a8F75612F20a79720\",\n    \"0xBcd4042DE499D14e55001CcbB24a551F3b954096\",\n    \"0x71bE63f3384f5fb98995898A86B02Fb2426c5788\",\n    \"0xFABB0ac9d68B0B445fB7357272Ff202C5651694a\",\n    \"0x1CBd3b2770909D4e10f157cABC84C7264073C9Ec\",\n    \"0xdF3e18d64BC6A983f673Ab319CCaE4f1a57C7097\",\n    \"0xcd3B766CCDd6AE721141F452C550Ca635964ce71\",\n    \"0x2546BcD3c84621e976D8185a91A922aE77ECEc30\",\n    \"0xbDA5747bFD65F08deb54cb465eB87D40e51B197E\",\n    \"0xdD2FD4581271e230360230F9337D5c0430Bf44C0\",\n    \"0x8626f6940E2eb28930eFb4CeF49B2d1F2C9C1199\",\n  ];\n  const fetchData = async (address) => {\n    try {\n      const dataArray = await contract.display(address || account);\n      const isEmpty = dataArray.length === 0;\n\n      if (!isEmpty) {\n        const str = dataArray.join(\",\");\n        const str_array = str.split(\",\");\n        const images = str_array.map((item, i) => {\n          return (\n            <a href={item} key={i} target=\"_blank\" rel=\"noreferrer\">\n              <img\n                key={i}\n                src={`https://gateway.pinata.cloud/ipfs/${item.substring(6)}`}\n                alt=\"Patient Health Record\"\n                className=\"image-list\"\n              ></img>\n            </a>\n          );\n        });\n\n        setData(images);\n      } else {\n        alert(\"No Record to display\");\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"Error: \" + error.message);\n    }\n  };\n\n  const getDiseasePredictions = async (address) => {\n    try {\n      const [decision_tree, random_forest, naive_bayes] = await contract.getDiseasePredictions(address || account);\n      setDiseasePredictions({\n        decision_tree,\n        random_forest,\n        naive_bayes,\n      });\n    } catch (error) {\n      console.error(error);\n      alert(\"Error fetching disease predictions: \" + error.message);\n    }\n  };\n\n  useEffect(() => {\n    if (selectedAccount) {\n      fetchData(selectedAccount);\n      getDiseasePredictions(selectedAccount);\n    }\n  }, [selectedAccount]);\n\n  const handleAccountInputChange = (event) => {\n    setSelectedAccount(event.target.value);\n  };\n\n  const handleManualAccountInput = () => {\n    const manuallyEnteredAccount = prompt(\"Enter an Account Number\");\n    if (manuallyEnteredAccount) {\n      setSelectedAccount(manuallyEnteredAccount);\n    }\n  };\n\n  return (\n    <>\n      <select\n        className=\"account-dropdown\"\n        onChange={handleAccountInputChange}\n        value={selectedAccount}\n      >\n        <option value=\"\" disabled className=\"select-option\">\n          Select an Account Number\n        </option>\n        {accountNumbers.map((accountNumber, index) => (\n          <option key={index} value={accountNumber}>\n            {accountNumber}\n          </option>\n        ))}\n      </select>\n      <br />\n      <br />\n      <button className=\"center button\" onClick={fetchData}>\n        Get Patient Record\n      </button>\n      <button className=\"center button\" onClick={getDiseasePredictions}>\n        Get Disease Predictions\n      </button>\n      <div className=\"image-list\">{data}</div>\n      {/* Display disease predictions */}\n      <div className=\"disease-predictions\">\n        <h2>Disease Predictions</h2>\n        <p>Decision Tree: {diseasePredictions.decision_tree}</p>\n        <p>Random Forest: {diseasePredictions.random_forest}</p>\n        <p>Naive Bayes: {diseasePredictions.naive_bayes}</p>\n      </div>\n    </>\n  );\n};\n\nexport default Display;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}