{"ast":null,"code":"var _jsxFileName = \"/Users/tiryagishprayad/Pictures/dis3.2/web4/src/components/Feedback.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Feedback = _ref => {\n  _s();\n  let {\n    contract,\n    account\n  } = _ref;\n  const [uploadedRecords, setUploadedRecords] = useState([]);\n  const [selectedRecord, setSelectedRecord] = useState(null);\n  const [feedback, setFeedback] = useState(\"\");\n  const [submittedFeedback, setSubmittedFeedback] = useState([]);\n  const [inputAddress, setInputAddress] = useState(\"\");\n  const fetchUploadedRecords = async () => {\n    try {\n      let records;\n      if (inputAddress) {\n        records = await contract.display(inputAddress);\n      } else {\n        records = await contract.display(account);\n      }\n      setUploadedRecords(records);\n    } catch (error) {\n      console.error(\"Error fetching uploaded records:\", error);\n    }\n  };\n  const fetchFeedback = async () => {\n    try {\n      let feedbackData = await contract.getFeedback();\n      setSubmittedFeedback(feedbackData);\n    } catch (error) {\n      console.error(\"Error fetching feedback data:\", error);\n    }\n  };\n  const handleRecordClick = record => {\n    setSelectedRecord(record);\n  };\n  const handleFeedbackChange = e => {\n    setFeedback(e.target.value);\n  };\n  const submitFeedback = async () => {\n    try {\n      await contract.provideFeedback(account, selectedRecord, feedback);\n      setFeedback(\"\");\n      setSubmittedFeedback(prevFeedback => [...prevFeedback, {\n        user: account,\n        record: selectedRecord,\n        feedback: feedback\n      }]);\n    } catch (error) {\n      console.error(\"Error submitting feedback:\", error);\n    }\n  };\n  const subscribeToFeedbackEvents = () => {\n    if (contract) {\n      contract.on(\"FeedbackProvided\", handleFeedbackProvided);\n    }\n  };\n  const handleFeedbackProvided = (record, feedback) => {\n    const userAddress = feedback.user;\n    contract.getName(userAddress).then(userName => {\n      setSubmittedFeedback(prevFeedback => [...prevFeedback, {\n        user: userName,\n        record,\n        feedback\n      }]);\n    }).catch(error => {\n      console.error(\"Error getting username:\", error);\n    });\n  };\n  useEffect(() => {\n    fetchUploadedRecords();\n    subscribeToFeedbackEvents();\n    fetchFeedback();\n    return () => {\n      if (contract) {\n        contract.off(\"FeedbackProvided\", handleFeedbackProvided);\n      }\n    };\n  }, [contract, inputAddress]);\n  const handleAddressChange = e => {\n    setInputAddress(e.target.value);\n  };\n  const handleAddressSubmit = () => {\n    fetchUploadedRecords();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Health Record Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Address\",\n        value: inputAddress,\n        onChange: handleAddressChange,\n        className: \"address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddressSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"record-list\",\n      children: uploadedRecords.map((record, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `record ${selectedRecord === record ? \"selected\" : \"\"}`,\n        onClick: () => handleRecordClick(record),\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: record,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: record\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), selectedRecord && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Record: \", selectedRecord]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: feedback,\n          onChange: handleFeedbackChange,\n          placeholder: \"Enter your feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitFeedback,\n          children: \"Submit Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 3\n      }, this), submittedFeedback.length > 0 ? submittedFeedback.map((feedback, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User: \", userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Record: \", feedback.record]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Feedback: \", feedback.feedback]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No feedback submitted.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(Feedback, \"qWoEzj0jlv+3VltdIxcmuiuCZyQ=\");\n_c = Feedback;\nexport default Feedback;\nvar _c;\n$RefreshReg$(_c, \"Feedback\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Feedback","_ref","_s","contract","account","uploadedRecords","setUploadedRecords","selectedRecord","setSelectedRecord","feedback","setFeedback","submittedFeedback","setSubmittedFeedback","inputAddress","setInputAddress","fetchUploadedRecords","records","display","error","console","fetchFeedback","feedbackData","getFeedback","handleRecordClick","record","handleFeedbackChange","e","target","value","submitFeedback","provideFeedback","prevFeedback","user","subscribeToFeedbackEvents","on","handleFeedbackProvided","userAddress","getName","then","userName","catch","off","handleAddressChange","handleAddressSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","className","onClick","map","index","href","rel","length","_c","$RefreshReg$"],"sources":["/Users/tiryagishprayad/Pictures/dis3.2/web4/src/components/Feedback.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Feedback = ({ contract, account }) => {\n  const [uploadedRecords, setUploadedRecords] = useState([]);\n  const [selectedRecord, setSelectedRecord] = useState(null);\n  const [feedback, setFeedback] = useState(\"\");\n  const [submittedFeedback, setSubmittedFeedback] = useState([]);\n  const [inputAddress, setInputAddress] = useState(\"\");\n\n  const fetchUploadedRecords = async () => {\n    try {\n      let records;\n      if (inputAddress) {\n        records = await contract.display(inputAddress);\n      } else {\n        records = await contract.display(account);\n      }\n      setUploadedRecords(records);\n    } catch (error) {\n      console.error(\"Error fetching uploaded records:\", error);\n    }\n  };\n\n  const fetchFeedback = async () => {\n    try {\n      let feedbackData = await contract.getFeedback();\n      setSubmittedFeedback(feedbackData);\n    } catch (error) {\n      console.error(\"Error fetching feedback data:\", error);\n    }\n  };\n\n  const handleRecordClick = (record) => {\n    setSelectedRecord(record);\n  };\n\n  const handleFeedbackChange = (e) => {\n    setFeedback(e.target.value);\n  };\n\n  const submitFeedback = async () => {\n    try {\n      await contract.provideFeedback(account,selectedRecord, feedback);\n      setFeedback(\"\");\n      setSubmittedFeedback((prevFeedback) => [\n        ...prevFeedback,\n        {\n          user : account,\n          record : selectedRecord,\n          feedback :feedback,\n        },\n      ]);\n    } catch (error) {\n      console.error(\"Error submitting feedback:\", error);\n    }\n  };\n\n  const subscribeToFeedbackEvents = () => {\n    if (contract) {\n      contract.on(\"FeedbackProvided\", handleFeedbackProvided);\n    }\n  };\n\n  const handleFeedbackProvided = (record, feedback) => {\n    const userAddress = feedback.user;\n    contract.getName(userAddress).then(userName => {\n      setSubmittedFeedback((prevFeedback) => [\n        ...prevFeedback,\n        {\n          user: userName,\n          record,\n          feedback,\n        },\n      ]);\n    }).catch(error => {\n      console.error(\"Error getting username:\", error);\n    });\n  };\n  \n  \n\n  useEffect(() => {\n    fetchUploadedRecords();\n    subscribeToFeedbackEvents();\n    fetchFeedback();\n\n    return () => {\n      if (contract) {\n        contract.off(\"FeedbackProvided\", handleFeedbackProvided);\n      }\n    };\n  }, [contract, inputAddress]);\n\n  const handleAddressChange = (e) => {\n    setInputAddress(e.target.value);\n  };\n\n  const handleAddressSubmit = () => {\n    fetchUploadedRecords();\n  };\n\n  return (\n    <div>\n      <h2>Health Record Feedback</h2>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter Address\"\n          value={inputAddress}\n          onChange={handleAddressChange}\n          className=\"address\"\n        />\n        <button onClick={handleAddressSubmit}>Submit</button>\n      </div>\n      <div className=\"record-list\">\n        {uploadedRecords.map((record, index) => (\n          <div\n            key={index}\n            className={`record ${selectedRecord === record ? \"selected\" : \"\"}`}\n            onClick={() => handleRecordClick(record)}\n          >\n            <a href={record} target=\"_blank\" rel=\"noopener noreferrer\">\n              {record}\n            </a>\n          </div>\n        ))}\n      </div>\n      {selectedRecord && (\n        <div className=\"feedback-section\">\n          <h3>Record: {selectedRecord}</h3>\n          <div>\n            <textarea\n              value={feedback}\n              onChange={handleFeedbackChange}\n              placeholder=\"Enter your feedback\"\n            />\n            <button onClick={submitFeedback}>Submit Feedback</button>\n          </div>\n        </div>\n      )}\n\n<div className=\"feedback-list\">\n  <h3>Feedback</h3>\n  {submittedFeedback.length > 0 ? (\n    submittedFeedback.map((feedback, index) => (\n      <div key={index} className=\"feedback-item\">\n        <p>User: {userName}</p> {/* Use the userName prop */}\n        <p>Record: {feedback.record}</p>\n        <p>Feedback: {feedback.feedback}</p>\n      </div>\n    ))\n  ) : (\n    <p>No feedback submitted.</p>\n  )}\n</div>\n    </div>\n  );\n};\n\nexport default Feedback;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}