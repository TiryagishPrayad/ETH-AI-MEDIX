{"ast":null,"code":"import _regeneratorRuntime from\"/Users/tiryagishprayad/Pictures/finalproject/web5/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/tiryagishprayad/Pictures/finalproject/web5/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/tiryagishprayad/Pictures/finalproject/web5/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from\"react\";import\"./Display.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Display=function Display(_ref){var contract=_ref.contract,account=_ref.account;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState({decision_tree:\"\",random_forest:\"\",naive_bayes:\"\"}),_useState4=_slicedToArray(_useState3,2),diseasePredictions=_useState4[0],setDiseasePredictions=_useState4[1];var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(address){var dataArray,isEmpty,str,str_array,images;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return contract.display(address||account);case 3:dataArray=_context.sent;isEmpty=dataArray.length===0;if(!isEmpty){str=dataArray.join(\",\");str_array=str.split(\",\");images=str_array.map(function(item,i){return/*#__PURE__*/_jsxs(\"a\",{href:item,target:\"_blank\",rel:\"noreferrer\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"https://gateway.pinata.cloud/ipfs/\".concat(item.substring(6)),alt:\"Patient Health Record\",className:\"image-list\"},i),/*#__PURE__*/_jsx(\"span\",{className:\"record-text\",children:\"Patient Health Record\"})]},i);});setData(images);}else{alert(\"No Record to display\");}_context.next=12;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.error(_context.t0);alert(\"Error: \"+_context.t0.message);case 12:case\"end\":return _context.stop();}},_callee,null,[[0,8]]);}));return function fetchData(_x){return _ref2.apply(this,arguments);};}();var getDiseasePredictions=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(address){var _yield$contract$getDi,_yield$contract$getDi2,decision_tree,random_forest,naive_bayes;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return contract.getDiseasePredictions(address||account);case 3:_yield$contract$getDi=_context2.sent;_yield$contract$getDi2=_slicedToArray(_yield$contract$getDi,3);decision_tree=_yield$contract$getDi2[0];random_forest=_yield$contract$getDi2[1];naive_bayes=_yield$contract$getDi2[2];setDiseasePredictions({decision_tree:decision_tree,random_forest:random_forest,naive_bayes:naive_bayes});_context2.next=15;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);console.error(_context2.t0);alert(\"Error fetching disease predictions: \"+_context2.t0.message);case 15:case\"end\":return _context2.stop();}},_callee2,null,[[0,11]]);}));return function getDiseasePredictions(_x2){return _ref3.apply(this,arguments);};}();useEffect(function(){getDiseasePredictions(account);// eslint-disable-next-line react-hooks/exhaustive-deps\n},[account]);var handleGetDiseasePredictions=function handleGetDiseasePredictions(){var address=document.querySelector(\".address\").value;getDiseasePredictions(address);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter Address\",className:\"address\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{className:\"center button\",onClick:function onClick(){return fetchData(document.querySelector(\".address\").value);},children:\"Get Patient Record\"}),/*#__PURE__*/_jsx(\"button\",{className:\"center button\",onClick:handleGetDiseasePredictions,children:\"Get Disease Predictions\"}),/*#__PURE__*/_jsx(\"div\",{className:\"image-list\",children:data}),/*#__PURE__*/_jsxs(\"div\",{className:\"disease-predictions\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Disease Predictions\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Decision Tree: \",diseasePredictions.decision_tree]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Random Forest: \",diseasePredictions.random_forest]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Naive Bayes: \",diseasePredictions.naive_bayes]})]})]});};export default Display;","map":{"version":3,"names":["useState","useEffect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Display","_ref","contract","account","_useState","_useState2","_slicedToArray","data","setData","_useState3","decision_tree","random_forest","naive_bayes","_useState4","diseasePredictions","setDiseasePredictions","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","address","dataArray","isEmpty","str","str_array","images","wrap","_callee$","_context","prev","next","display","sent","length","join","split","map","item","i","href","target","rel","children","src","concat","substring","alt","className","alert","t0","console","error","message","stop","_x","apply","arguments","getDiseasePredictions","_ref3","_callee2","_yield$contract$getDi","_yield$contract$getDi2","_callee2$","_context2","_x2","handleGetDiseasePredictions","document","querySelector","value","type","placeholder","onClick"],"sources":["/Users/tiryagishprayad/Pictures/finalproject/web5/src/components/Display.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"./Display.css\";\r\n\r\nconst Display = ({ contract, account }) => {\r\n  const [data, setData] = useState(\"\");\r\n  const [diseasePredictions, setDiseasePredictions] = useState({\r\n    decision_tree: \"\",\r\n    random_forest: \"\",\r\n    naive_bayes: \"\",\r\n  });\r\n\r\n  const fetchData = async (address) => {\r\n    try {\r\n      const dataArray = await contract.display(address || account);\r\n      const isEmpty = dataArray.length === 0;\r\n\r\n      if (!isEmpty) {\r\n        const str = dataArray.join(\",\");\r\n        const str_array = str.split(\",\");\r\n        const images = str_array.map((item, i) => {\r\n          return (\r\n            <a href={item} key={i} target=\"_blank\" rel=\"noreferrer\">\r\n              <img\r\n                key={i}\r\n                src={`https://gateway.pinata.cloud/ipfs/${item.substring(6)}`}\r\n                alt=\"Patient Health Record\"\r\n                className=\"image-list\"\r\n              ></img>\r\n              <span className=\"record-text\">Patient Health Record</span>\r\n            </a>\r\n          );\r\n        });\r\n\r\n        setData(images);\r\n      } else {\r\n        alert(\"No Record to display\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"Error: \" + error.message);\r\n    }\r\n  };\r\n\r\n  const getDiseasePredictions = async (address) => {\r\n    try {\r\n      const [decision_tree, random_forest, naive_bayes] = await contract.getDiseasePredictions(address || account );\r\n      setDiseasePredictions({\r\n        decision_tree,\r\n        random_forest,\r\n        naive_bayes,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"Error fetching disease predictions: \" + error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDiseasePredictions(account); \r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [account]);\r\n  \r\n  const handleGetDiseasePredictions = () => {\r\n    const address = document.querySelector(\".address\").value;\r\n    getDiseasePredictions(address );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input type=\"text\" placeholder=\"Enter Address\" className=\"address\" />\r\n      <br /><br />\r\n      <button className=\"center button\" onClick={() => fetchData(document.querySelector(\".address\").value)}>\r\n        Get Patient Record\r\n      </button>\r\n      <button className=\"center button\" onClick={handleGetDiseasePredictions}>\r\n        Get Disease Predictions\r\n      </button>\r\n      <div className=\"image-list\">{data}</div>\r\n\r\n      {/* Display disease predictions */}\r\n      <div className=\"disease-predictions\">\r\n        <h2>Disease Predictions</h2>\r\n        <p>Decision Tree: {diseasePredictions.decision_tree}</p>\r\n        <p>Random Forest: {diseasePredictions.random_forest}</p>\r\n        <p>Naive Bayes: {diseasePredictions.naive_bayes}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}