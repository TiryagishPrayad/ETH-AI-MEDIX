{"ast":null,"code":"var _jsxFileName = \"/Users/tiryagishprayad/Pictures/finalproject/web5/src/App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Upload from \"./artifacts/contracts/Upload.sol/Upload.json\";\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport FileUpload from \"./components/FileUpload\";\nimport Display from \"./components/Display\";\nimport Modal from \"./components/Modal\";\nimport Header from \"./components/header\";\nimport Feedback from \"./components/Feedback\";\nimport \"./App.css\";\nimport Disease from \"./components/dise\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst accountNumbers = [\"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\", \"0x70997970C51812dc3A010C7d01b50e0d17dc79C8\", \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\", 0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC, 0x90F79bf6EB2c4f870365E785982E1f101E93b906];\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [uploadedRecords, setUploadedRecords] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const [isNameSet, setIsNameSet] = useState(false);\n  const [userRole, setUserRole] = useState(0); // Default to UserRole.Patient\n  const [userRoles, setUserRoles] = useState({});\n  useEffect(() => {\n    const loadProvider = async () => {\n      try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        if (provider) {\n          window.ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          window.ethereum.on(\"accountsChanged\", () => {\n            window.location.reload();\n          });\n          await provider.send(\"eth_requestAccounts\", []);\n          const signer = provider.getSigner();\n          const address = await signer.getAddress();\n          setAccount(address);\n          const contractAddress = \"0x8A791620dd6260079BF849Dc5567aDC3F2FdC318\";\n          const contract = new ethers.Contract(contractAddress, Upload.abi, signer);\n          setContract(contract);\n          setProvider(provider);\n          fetchUploadedRecords(contract, address);\n          const name = await contract.getName(address);\n          const role = await contract.getUserRole(address);\n          if (name) {\n            setUserName(name);\n            setIsNameSet(true);\n          }\n          setUserRole(role);\n          setUserRoles({\n            ...userRoles,\n            [address]: role\n          });\n        } else {\n          console.error(\"Metamask is not installed\");\n        }\n      } catch (error) {\n        console.error(\"Error loading provider:\", error);\n      }\n    };\n    loadProvider();\n  }, []);\n  const fetchUploadedRecords = async (contract, address) => {\n    try {\n      const records = await contract.display(address);\n      setUploadedRecords(records);\n    } catch (error) {\n      console.error(\"Error fetching uploaded records:\", error);\n    }\n  };\n  const loadAccessAddresses = async () => {\n    try {\n      if (contract) {\n        const addresses = await contract.shareAccess();\n        setAccessAddresses(addresses);\n      }\n    } catch (error) {\n      console.error(\"Error fetching access addresses:\", error);\n    }\n  };\n  useEffect(() => {\n    loadAccessAddresses();\n  }, [contract]);\n  const setUserRoleAndName = async () => {\n    try {\n      if (!contract || !account || !userName) {\n        console.error(\"Contract, account, or userName not available\");\n        return;\n      }\n\n      // Call the setNameAndRole function in the smart contract\n      const tx = await contract.setNameAndRole(userName, userRole);\n      await tx.wait();\n\n      // Update the userRoles state locally\n      setUserRoles({\n        ...userRoles,\n        [account]: userRole\n      });\n\n      // Set the user's name locally\n      setIsNameSet(true);\n      console.log(\"Name and Role set successfully\");\n    } catch (error) {\n      console.error(\"Error setting name and role:\", error);\n    }\n  };\n  const [accessAddresses, setAccessAddresses] = useState([]);\n  useEffect(() => {\n    const loadAccessAddresses = async (contract, address) => {\n      try {\n        if (contract) {\n          const addresses = await contract.getAccessAddresses();\n          setAccessAddresses(addresses);\n        }\n      } catch (error) {\n        console.error(\"Error fetching access addresses:\", error);\n      }\n    };\n    loadAccessAddresses();\n  });\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [!modalOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"share\",\n      onClick: () => setModalOpen(true),\n      children: \"Share\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      setModalOpen: setModalOpen,\n      contract: contract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Username: \", userName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Account Address: \", account]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Role: \", userRole === 0 ? 'Patient' : 'Doctor']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), !isNameSet ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Your Name\",\n            value: userName,\n            onChange: e => setUserName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: userRole,\n            onChange: e => setUserRole(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: 0,\n              children: \"Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 1,\n              children: \"Doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: setUserRoleAndName,\n            children: \"Set Name and Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Access Addresses:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: accessAddresses.map((address, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: address\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(FileUpload, {\n            account: account,\n            provider: provider,\n            contract: contract\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/display\",\n          element: /*#__PURE__*/_jsxDEV(Display, {\n            contract: contract,\n            account: account\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/feedback\",\n          element: /*#__PURE__*/_jsxDEV(Feedback, {\n            contract: contract,\n            account: account,\n            uploadedRecords: uploadedRecords,\n            userName: userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/disease\",\n          element: /*#__PURE__*/_jsxDEV(Disease, {\n            contract: contract,\n            account: account\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"T84b/sl3zz1jLc/76rYrB64NT34=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Route","Routes","Upload","useState","useEffect","ethers","FileUpload","Display","Modal","Header","Feedback","Disease","jsxDEV","_jsxDEV","accountNumbers","App","_s","account","setAccount","contract","setContract","provider","setProvider","modalOpen","setModalOpen","uploadedRecords","setUploadedRecords","userName","setUserName","isNameSet","setIsNameSet","userRole","setUserRole","userRoles","setUserRoles","loadProvider","providers","Web3Provider","window","ethereum","on","location","reload","send","signer","getSigner","address","getAddress","contractAddress","Contract","abi","fetchUploadedRecords","name","getName","role","getUserRole","console","error","records","display","loadAccessAddresses","addresses","shareAccess","setAccessAddresses","setUserRoleAndName","tx","setNameAndRole","wait","log","accessAddresses","getAccessAddresses","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","index","path","element","_c","$RefreshReg$"],"sources":["/Users/tiryagishprayad/Pictures/finalproject/web5/src/App.js"],"sourcesContent":["import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Upload from \"./artifacts/contracts/Upload.sol/Upload.json\";\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport FileUpload from \"./components/FileUpload\";\nimport Display from \"./components/Display\";\nimport Modal from \"./components/Modal\";\nimport Header from \"./components/header\";\nimport Feedback from \"./components/Feedback\";\nimport \"./App.css\";\nimport Disease from \"./components/dise\";\n\nconst accountNumbers = [\n  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\",\n  \"0x70997970C51812dc3A010C7d01b50e0d17dc79C8\",\n  \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\",\n  0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC,\n  0x90F79bf6EB2c4f870365E785982E1f101E93b906,\n];\n\nfunction App() {\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [uploadedRecords, setUploadedRecords] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const [isNameSet, setIsNameSet] = useState(false);\n  const [userRole, setUserRole] = useState(0); // Default to UserRole.Patient\n  const [userRoles, setUserRoles] = useState({});\n\n  useEffect(() => {\n    const loadProvider = async () => {\n      try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        if (provider) {\n          window.ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n\n          window.ethereum.on(\"accountsChanged\", () => {\n            window.location.reload();\n          });\n\n          await provider.send(\"eth_requestAccounts\", []);\n          const signer = provider.getSigner();\n          const address = await signer.getAddress();\n          setAccount(address);\n          const contractAddress = \"0x8A791620dd6260079BF849Dc5567aDC3F2FdC318\";\n          const contract = new ethers.Contract(contractAddress, Upload.abi, signer);\n          setContract(contract);\n          setProvider(provider);\n          fetchUploadedRecords(contract, address);\n          const name = await contract.getName(address);\n          const role = await contract.getUserRole(address);\n          if (name) {\n            setUserName(name);\n            setIsNameSet(true);\n          }\n          setUserRole(role);\n          setUserRoles({ ...userRoles, [address]: role });\n        } else {\n          console.error(\"Metamask is not installed\");\n        }\n      } catch (error) {\n        console.error(\"Error loading provider:\", error);\n      }\n    };\n\n    loadProvider();\n  }, []);\n\n  const fetchUploadedRecords = async (contract, address) => {\n    try {\n      const records = await contract.display(address);\n      setUploadedRecords(records);\n    } catch (error) {\n      console.error(\"Error fetching uploaded records:\", error);\n    }\n  };\n\n  const loadAccessAddresses = async () => {\n    try {\n      if (contract) {\n        const addresses = await contract.shareAccess();\n        setAccessAddresses(addresses);\n      }\n    } catch (error) {\n      console.error(\"Error fetching access addresses:\", error);\n    }\n  };\n\n  useEffect(() => {\n    loadAccessAddresses();\n  }, [contract]);\n\n  const setUserRoleAndName = async () => {\n    try {\n      if (!contract || !account || !userName) {\n        console.error(\"Contract, account, or userName not available\");\n        return;\n      }\n\n      // Call the setNameAndRole function in the smart contract\n      const tx = await contract.setNameAndRole(userName, userRole);\n      await tx.wait();\n\n      // Update the userRoles state locally\n      setUserRoles({ ...userRoles, [account]: userRole });\n\n      // Set the user's name locally\n      setIsNameSet(true);\n\n      console.log(\"Name and Role set successfully\");\n    } catch (error) {\n      console.error(\"Error setting name and role:\", error);\n    }\n  };\n\n  const [accessAddresses, setAccessAddresses] = useState([]);\n\n  useEffect(() => {\n    const loadAccessAddresses = async (contract,address) => {\n      try {\n        if (contract) {\n          const addresses = await contract.getAccessAddresses();\n          setAccessAddresses(addresses);\n        }\n      } catch (error) {\n        console.error(\"Error fetching access addresses:\", error);\n      }\n    };\n\n    loadAccessAddresses();\n  }, );\n\n  return (\n    <Router>\n      {!modalOpen && (\n        <button className=\"share\" onClick={() => setModalOpen(true)}>\n          Share\n        </button>\n      )}\n      {modalOpen && <Modal setModalOpen={setModalOpen} contract={contract} />}\n\n      <div className=\"App\">\n        <Header />\n        <div>\n          <div>\n            <p>Username: {userName}</p>\n            <p>Account Address: {account}</p>\n            <p>Role: {userRole === 0 ? 'Patient' : 'Doctor'}</p>\n\n          </div>\n\n          {!isNameSet ? (\n            <div>\n              <input\n                type=\"text\"\n                placeholder=\"Your Name\"\n                value={userName}\n                onChange={(e) => setUserName(e.target.value)}\n              />\n              <select\n                value={userRole}\n                onChange={(e) => setUserRole(e.target.value)}\n              >\n                <option value={0}>Patient</option>\n                <option value={1}>Doctor</option>\n              </select>\n              <button onClick={setUserRoleAndName}>\n                Set Name and Role\n              </button>\n            </div>\n          ) : null}\n        </div>\n        <div>\n          <h3>Access Addresses:</h3>\n          <ul>\n            {accessAddresses.map((address, index) => (\n              <li key={index}>{address}</li>\n            ))}\n          </ul>\n        </div>\n\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <FileUpload account={account} provider={provider} contract={contract} />\n            }\n          />\n          <Route\n            path=\"/display\"\n            element={<Display contract={contract} account={account} />}\n          />\n          <Route\n            path=\"/feedback\"\n            element={\n              <Feedback\n                contract={contract}\n                account={account}\n                uploadedRecords={uploadedRecords}\n                userName={userName}\n              />\n            }\n          />\n          <Route path=\"/disease\" element={<Disease contract={contract} account={account} />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}